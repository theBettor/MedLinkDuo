// Generated by Dagger (https://dagger.dev).
package com.bettor.medlinkduo.core.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import kotlinx.coroutines.CoroutineDispatcher;

@ScopeMetadata
@QualifierMetadata("com.bettor.medlinkduo.core.di.IoDispatcher")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DispatcherModule_ProvideIoFactory implements Factory<CoroutineDispatcher> {
  @Override
  public CoroutineDispatcher get() {
    return provideIo();
  }

  public static DispatcherModule_ProvideIoFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CoroutineDispatcher provideIo() {
    return Preconditions.checkNotNullFromProvides(DispatcherModule.INSTANCE.provideIo());
  }

  private static final class InstanceHolder {
    private static final DispatcherModule_ProvideIoFactory INSTANCE = new DispatcherModule_ProvideIoFactory();
  }
}
