// Generated by Dagger (https://dagger.dev).
package com.bettor.medlinkduo.core.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import kotlinx.coroutines.CoroutineScope;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("com.bettor.medlinkduo.core.di.AppScope")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_AppScopeFactory implements Factory<CoroutineScope> {
  @Override
  public CoroutineScope get() {
    return appScope();
  }

  public static AppModule_AppScopeFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CoroutineScope appScope() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.appScope());
  }

  private static final class InstanceHolder {
    private static final AppModule_AppScopeFactory INSTANCE = new AppModule_AppScopeFactory();
  }
}
