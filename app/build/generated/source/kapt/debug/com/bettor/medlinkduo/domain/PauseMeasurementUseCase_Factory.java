// Generated by Dagger (https://dagger.dev).
package com.bettor.medlinkduo.domain;

import com.bettor.medlinkduo.data.measure.MeasurementSupervisor;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class PauseMeasurementUseCase_Factory implements Factory<PauseMeasurementUseCase> {
  private final Provider<MeasurementSupervisor> supProvider;

  public PauseMeasurementUseCase_Factory(Provider<MeasurementSupervisor> supProvider) {
    this.supProvider = supProvider;
  }

  @Override
  public PauseMeasurementUseCase get() {
    return newInstance(supProvider.get());
  }

  public static PauseMeasurementUseCase_Factory create(
      Provider<MeasurementSupervisor> supProvider) {
    return new PauseMeasurementUseCase_Factory(supProvider);
  }

  public static PauseMeasurementUseCase newInstance(MeasurementSupervisor sup) {
    return new PauseMeasurementUseCase(sup);
  }
}
