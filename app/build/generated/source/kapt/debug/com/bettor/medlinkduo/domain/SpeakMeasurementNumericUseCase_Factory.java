// Generated by Dagger (https://dagger.dev).
package com.bettor.medlinkduo.domain;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SpeakMeasurementNumericUseCase_Factory implements Factory<SpeakMeasurementNumericUseCase> {
  private final Provider<TtsController> ttsProvider;

  public SpeakMeasurementNumericUseCase_Factory(Provider<TtsController> ttsProvider) {
    this.ttsProvider = ttsProvider;
  }

  @Override
  public SpeakMeasurementNumericUseCase get() {
    return newInstance(ttsProvider.get());
  }

  public static SpeakMeasurementNumericUseCase_Factory create(Provider<TtsController> ttsProvider) {
    return new SpeakMeasurementNumericUseCase_Factory(ttsProvider);
  }

  public static SpeakMeasurementNumericUseCase newInstance(TtsController tts) {
    return new SpeakMeasurementNumericUseCase(tts);
  }
}
